#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Nomenclature {
private:
    string productName;
    double wholesalePrice;
    double retailMarkup;
    int quantityInStock;

public:
    // Конструктор с параметрами
    Nomenclature(const string& pn, double wp, double rm, int q)
        : productName(pn), wholesalePrice(wp), retailMarkup(rm), quantityInStock(q) {}


    double calculateNetIncome(int soldQuantity) const {
        double revenue = soldQuantity * (wholesalePrice * (retailMarkup / 100 + 1.0));
        double expenses = soldQuantity * wholesalePrice;
        double netIncome = revenue - expenses;
        cout << "Чистая прибыль от продаж " << soldQuantity << " " << this->productName << " товары: $" << netIncome << endl;
        return netIncome;
    }

    void displayProductDetails() const {
        cout << "Название продукта: " << productName << endl;
        cout << "Оптовая цена: $" << wholesalePrice << endl;
        cout << "Розничная наценка: " << retailMarkup << "%" << endl;
        cout << "Количество на складе: " << quantityInStock << " товаров" << endl;
    }

    ~Nomenclature() {
        cout << "Продукт '" << productName << "' был удален.   " << endl;
    }
};

int main() {
    setlocale(LC_ALL, "rus");
    vector<Nomenclature> market;
    cout << "Введите количество товаров на вашем рынке: " << endl;
    int n;
    cin >> n;
    cout << "Укажите " << n << " товаров на вашем рынке в следующем порядке: " << endl;
    cout << "Название продукта, Оптовая цена, Розничная наценка, Количество на складе" << endl;
    for (int i = 0; i < n; i++) {
        string pn;
        double wp, rm;
        int q;
        cin >> pn >> wp >> rm >> q;
        market.emplace_back(pn, wp, rm, q);
    }

    for (Nomenclature& item : market) {
        item.displayProductDetails();
        // item.calculateNetIncome(10);
        double lol = item.calculateNetIncome(10);
    }
    return 0;
}

/*
 3
 Phone 500 20 50
 Laptop 1500 30 10
 Tablet 750 15 30
 */